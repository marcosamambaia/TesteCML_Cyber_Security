annotations:
  - border_color: '#00000000'
    border_style: ''
    color: '#808080FF'
    rotation: 0
    text_bold: false
    text_content: Atacante VLAN 20
    text_font: monospace
    text_italic: false
    text_size: 12
    text_unit: pt
    thickness: 1
    type: text
    x1: -640.0
    y1: 360.0
    z_index: 0
  - border_color: '#00000000'
    border_style: ''
    color: '#808080FF'
    rotation: 0
    text_bold: false
    text_content: V√≠tima VLAN 10
    text_font: monospace
    text_italic: false
    text_size: 12
    text_unit: pt
    thickness: 1
    type: text
    x1: -600.0
    y1: 200.0
    z_index: 1
  - border_color: '#00000000'
    border_style: ''
    color: '#808080FF'
    rotation: 0
    text_bold: false
    text_content: |-
      Na VLAN 20, o gateway padr√£o dos dispositivos
       √© o ASAv (192.168.20.254), que atua como
       firewall de borda. Ap√≥s a inspe√ß√£o, o tr√°fego
       √© encaminhado ao roteador (192.168.20.1), respons√°vel
       pelo roteamento inter-VLAN. Essa separa√ß√£o de
       fun√ß√µes permite aplicar seguran√ßa granular sem
       comprometer o desempenho do roteamento.
    text_font: monospace
    text_italic: false
    text_size: 12
    text_unit: pt
    thickness: 1
    type: text
    x1: 120.0
    y1: 120.0
    z_index: 2
  - border_color: '#00000000'
    border_style: ''
    color: '#808080FF'
    rotation: 0
    text_bold: false
    text_content: |2
       Simula√ß√µes de ataque que voc√™ pode fazer
      üîπ 1. Ping (ICMP) ‚Äì reconhecimento b√°sico
      ping -c 4 192.168.10.10


      Simula um atacante tentando descobrir se
      o PC2 est√° ativo. Se a ACL estiver
      bloqueando IP, esse teste deve falhar.


      üîπ 2. Nmap ‚Äì varredura de portas
      nmap -sS -T4 -Pn 192.168.10.10


      Realiza uma varredura TCP stealth (SYN scan)
       para detectar servi√ßos abertos no PC2.

      - -sS: stealth scan
      - -T4: velocidade agressiva
      - -Pn: ignora ping (caso ICMP esteja bloqueado)

      üîπ 3. Hping3 ‚Äì ataque de nega√ß√£o de servi√ßo (DoS)
      sudo hping3 -S -p 80 --flood 192.168.10.10


      Simula um ataque de flood TCP na porta 80.
       Ideal para testar se o ASAv consegue
      conter tr√°fego excessivo.


      üîπ 4. Arp-scan ‚Äì descoberta de dispositivos
       na VLAN
      sudo arp-scan --interface=ens2 --localnet


      Mapeia todos os dispositivos conectados √†
      mesma VLAN que o atacante. √ötil para
      simular reconhecimento lateral.


       Como o ASAv reage
      - Se a ACL estiver ativa (deny ip any any),
       todos esses testes devem falhar
      - Voc√™ pode refinar a ACL para permitir
      certos protocolos e bloquear outros
      Exemplo:
      access-list attacker-deny extended deny icmp any any
      access-list attacker-deny extended deny tcp any any eq 80
      access-group attacker-deny in interface attacker



      Documenta√ß√£o t√©cnica
      A simula√ß√£o de ataques foi realizada a partir
       da VLAN 20, com ferramentas como ping, nmap, hping3
       e arp-scan. O ASAv atuou como firewall de
       borda, bloqueando o tr√°fego de sa√≠da
      conforme as ACLs configuradas. Essa
      abordagem permite validar a efic√°cia das
       pol√≠ticas de seguran√ßa e treinar respostas
       a cen√°rios reais de intrus√£o.
    text_font: monospace
    text_italic: false
    text_size: 12
    text_unit: pt
    thickness: 1
    type: text
    x1: -1320.0
    y1: -40.0
    z_index: 3
  - border_color: '#00000000'
    border_style: ''
    color: '#808080FF'
    rotation: 0
    text_bold: false
    text_content: |-
      # ================================
      # Testes esperados a partir do PC1 (atacante)
      # Topologia com ASAv ativo e ACL aplicada
      # ================================

      ## Objetivo:
      Validar a efic√°cia do firewall (ASAv) na VLAN 20, impedindo que o atacante (PC1) acesse a rede da v√≠tima (VLAN 10).

      ## ACL configurada no ASAv:
      access-list BLOCK-ATTACKER extended deny ip any any
      access-group BLOCK-ATTACKER in interface outside

      # ------------------------------------------------------------
      # Ferramenta     | Comando sugerido                          | Objetivo do teste                      | Resultado obtido
      # ------------------------------------------------------------
      # Ping           | ping -c 4 192.168.10.10                    | Testar conectividade b√°sica (ICMP)     | ‚ùå 100% perda de pacotes
      # Nmap           | sudo nmap -sS -Pn 192.168.10.10            | Varredura de portas TCP                | ‚ùå Todas as portas filtradas
      # Hping3         | sudo hping3 -S -p 80 --flood 192.168.10.10 | Simular ataque DoS na porta 80         | ‚ùå Sem resposta / 100% perda
      # Arp-scan       | sudo arp-scan --interface=ens2 --localnet | Descoberta de dispositivos na VLAN 20  | ‚úÖ Detectou ASAv e roteador

      ## Observa√ß√µes:
      - O ASAv est√° operando na VLAN 20 com IP 192.168.20.254 e atua como gateway do PC1.
      - O roteador est√° na subinterface G0/1.20 com IP 192.168.20.1 e G0/1.10 com IP 192.168.10.1.
      - O PC2 (v√≠tima) est√° na VLAN 10 com IP 192.168.10.10.
      - A ACL aplicada no ASAv bloqueia todo tr√°fego IP de sa√≠da da VLAN 20.
      - O comando arp-scan funciona porque opera na camada 2 (n√£o roteado), portanto n√£o √© filtrado pelo ASAv.
      - Os testes demonstram claramente a diferen√ßa entre uma rede vulner√°vel (sem ASAv) e uma rede protegida (com ASAv).

      ## Status atual:
      ‚úÖ ASAv ativo e funcional
      ‚úÖ ACL aplicada corretamente
      ‚úÖ PC1 impedido de acessar a v√≠tima
      ‚úÖ Ferramentas instaladas: nmap, hping3, arp-scan
      ‚úÖ Testes executados com sucesso

      üîú Pr√≥ximo passo: documentar resultados finais e validar comportamento com ACLs refinadas (ex: permitir DNS, bloquear HTTP)
    text_font: monospace
    text_italic: false
    text_size: 12
    text_unit: pt
    thickness: 1
    type: text
    x1: -320.0
    y1: 520.0
    z_index: 4
  - border_color: '#00000000'
    border_style: ''
    color: '#808080FF'
    rotation: 0
    text_bold: false
    text_content: |-
      üîì Netplan do PC1 (atacante) ‚Äî sem ASAv

      network:
        version: 2
        ethernets:
          ens2:
            dhcp4: no
            addresses:
              - 192.168.20.10/24
            routes:
              - to: 0.0.0.0/0
                via: 192.168.20.1
            nameservers:
              addresses: [8.8.8.8, 1.1.1.1]
    text_font: monospace
    text_italic: false
    text_size: 12
    text_unit: pt
    thickness: 1
    type: text
    x1: -880.0
    y1: -600.0
    z_index: 5
  - border_color: '#00000000'
    border_style: ''
    color: '#808080FF'
    rotation: 0
    text_bold: false
    text_content: |-
      Roteador (IOSv)

      enable
      configure terminal
      hostname R1

      interface GigabitEthernet0/0
       ip address 192.168.10.1 255.255.255.0
       no shutdown

      interface GigabitEthernet0/1
       ip address 192.168.20.1 255.255.255.0
       no shutdown

      ip routing
      end
      write memory
    text_font: monospace
    text_italic: false
    text_size: 12
    text_unit: pt
    thickness: 1
    type: text
    x1: 280.0
    y1: 1680.0
    z_index: 6
  - border_color: '#00000000'
    border_style: ''
    color: '#808080FF'
    rotation: 0
    text_bold: false
    text_content: |-
      ! ================================
      ! ASAv - Configura√ß√£o para VLAN 20
      ! ================================

      ! Ativar interface outside (conectada √† VLAN 20)
      interface GigabitEthernet0/1
       nameif outside
       security-level 0
       ip address 192.168.20.254 255.255.255.0
       no shutdown

      ! Criar ACL para bloquear tr√°fego IP de sa√≠da
      access-list BLOCK-ATTACKER extended deny ip any any
      access-list BLOCK-ATTACKER extended permit ip any 192.168.20.0 255.255.255.0

      ! Aplicar ACL na interface outside
      access-group BLOCK-ATTACKER in interface outside

      ! Definir rota padr√£o para o roteador
      route outside 0.0.0.0 0.0.0.0 192.168.20.1

      ! (Opcional) Salvar configura√ß√£o
      write memory
    text_font: monospace
    text_italic: false
    text_size: 12
    text_unit: pt
    thickness: 1
    type: text
    x1: -520.0
    y1: 1680.0
    z_index: 7
  - border_color: '#00000000'
    border_style: ''
    color: '#808080FF'
    rotation: 0
    text_bold: false
    text_content: |-
      configure terminal
      hostname Switch-L2
      vlan 10
       name VITIMA
      vlan 20
       name ATACANTE

      interface Ethernet0/0
       switchport mode access
       switchport access vlan 10

      interface Ethernet0/1
       switchport mode access
       switchport access vlan 20

      interface Ethernet0/2
       switchport mode access
       switchport access vlan 20

      interface Ethernet0/3
       switchport trunk encapsulation dot1q
       switchport mode trunk
    text_font: monospace
    text_italic: false
    text_size: 12
    text_unit: pt
    thickness: 1
    type: text
    x1: 800.0
    y1: 1640.0
    z_index: 8
  - border_color: '#00000000'
    border_style: ''
    color: '#808080FF'
    rotation: 0
    text_bold: false
    text_content: |-
      PC2 vitima
      network:
        version: 2
        renderer: networkd
        ethernets:
          ens2:
            dhcp4: no
            addresses:
              - 192.168.10.10/24
            routes:
              - to: 0.0.0.0/0
                via: 192.168.10.1
            nameservers:
              addresses:
                - 8.8.8.8
    text_font: monospace
    text_italic: false
    text_size: 12
    text_unit: pt
    thickness: 1
    type: text
    x1: -400.0
    y1: -600.0
    z_index: 9
  - border_color: '#00000000'
    border_style: ''
    color: '#808080FF'
    rotation: 0
    text_bold: false
    text_content: |-
      # Topologia CML - Cen√°rio com ASAv (Firewall ativo)

      ## VLANs
      - VLAN 10: Rede da v√≠tima (192.168.10.0/24)
      - VLAN 20: Rede do atacante (192.168.20.0/24)

      ## Conex√µes de portas

      [PC1 - Atacante]
      - Interface: Ethernet0
      - Conectado √†: Switch-L2 (Ethernet0/1)
      - VLAN: 20

      [PC2 - V√≠tima]
      - Interface: Ethernet0
      - Conectado √†: Switch-L2 (Ethernet0/0)
      - VLAN: 10

      [ASAv - Firewall]
      - Interface: GigabitEthernet0/1
      - Conectado √†: Switch-L2 (Ethernet0/2)
      - VLAN: 20

      [Roteador - Inter-VLAN Routing]
      - Interface: GigabitEthernet0/1
      - Conectado √†: Switch-L2 (Ethernet0/3)
      - Modo: Trunk (dot1Q)
      - Subinterfaces:
        - G0/1.10 ‚Üí VLAN 10 ‚Üí IP 192.168.10.1
        - G0/1.20 ‚Üí VLAN 20 ‚Üí IP 192.168.20.1

      ## Observa√ß√µes
      - Switch-L2 porta E0/3 configurada como trunk
      - ASAv atua como firewall entre PC1 e o roteador
      - ACL no ASAv bloqueia tr√°fego IP de sa√≠da da VLAN 20
      - Roteador realiza roteamento entre VLANs via subinterfaces

      ## Testes esperados a partir do PC1
      - ping 192.168.20.254 ‚Üí ‚úÖ ASAv responde
      - ping 192.168.20.1 ‚Üí ‚úÖ Roteador responde
      - ping 192.168.10.10 ‚Üí ‚ùå Bloqueado pelo ASAv
      - ssh cisco@192.168.10.10 ‚Üí ‚ùå Bloqueado pela ACL
      - arp-scan --interface=ens2 --localnet ‚Üí ‚úÖ Funciona (camada 2)
    text_font: monospace
    text_italic: false
    text_size: 12
    text_unit: pt
    thickness: 1
    type: text
    x1: -1960.0
    y1: 40.0
    z_index: 10
  - border_color: '#00000000'
    border_style: ''
    color: '#808080FF'
    rotation: 0
    text_bold: false
    text_content: |-
      üõ°Ô∏è Netplan do PC1 (atacante) ‚Äî com ASA

      network:
        version: 2
        ethernets:
          ens2:
            dhcp4: no
            addresses:
              - 192.168.20.10/24
            routes:
              - to: 0.0.0.0/0
                via: 192.168.20.254
            nameservers:
              addresses: [8.8.8.8, 1.1.1.1]
    text_font: monospace
    text_italic: false
    text_size: 12
    text_unit: pt
    thickness: 1
    type: text
    x1: -1280.0
    y1: -600.0
    z_index: 11
  - border_color: '#00000000'
    border_style: ''
    color: '#808080FF'
    rotation: 0
    text_bold: false
    text_content: "/etc/netplan/01-netcfg.yaml\n\n\U0001F6E0Ô∏è Comando para abrir com\
      \ o editor nano\n\nsudo nano /etc/netplan/01-netcfg.yaml\n\n‚Ä¢ \tCom vim\nsudo\
      \ vim /etc/netplan/01-netcfg.yaml\n\n‚Ä¢ \tCom gedit(interfacegrafica)\n\nsudo\
      \ gedit /etc/netplan/01-netcfg.yaml\n\nAp√≥s editar, salve e aplique com:\n\n\
      sudo netplan apply"
    text_font: monospace
    text_italic: false
    text_size: 12
    text_unit: pt
    thickness: 1
    type: text
    x1: -1280.0
    y1: -1080.0
    z_index: 12
  - border_color: '#00000000'
    border_style: ''
    color: '#808080FF'
    rotation: 0
    text_bold: false
    text_content: "\U0001F4CC Observa√ß√µes para documenta√ß√£o\n‚Ä¢ \tInterface  do ASAv\
      \ est√° conectada √† porta  do Switch-L2, que est√° em VLAN 20.\n‚Ä¢ \tO IP  ser√°\
      \ o gateway do PC1 no cen√°rio com firewall.\n‚Ä¢ \tA ACL  bloqueia qualquer tr√°fego\
      \ IP de sa√≠da, simulando prote√ß√£o contra ataques.\n‚Ä¢ \tA rota padr√£o garante\
      \ que o ASAv envie pacotes para o roteador ap√≥s inspe√ß√£o."
    text_font: monospace
    text_italic: false
    text_size: 12
    text_unit: pt
    thickness: 1
    type: text
    x1: -560.0
    y1: 2360.0
    z_index: 13
  - border_color: '#00000000'
    border_style: ''
    color: '#808080FF'
    rotation: 0
    text_bold: false
    text_content: |-
      # Relat√≥rio de Testes - Cen√°rio com ASAv (Firewall Ativo)

      ## Objetivo
      Validar a efic√°cia do ASAv como firewall entre a VLAN 20 (atacante) e a VLAN 10 (v√≠tima), bloqueando tr√°fego IP indesejado.

      ---

      ## Topologia

      [PC1 - Atacante]
      - IP: 192.168.20.10
      - Gateway: 192.168.20.254 (ASAv)

      [ASAv - Firewall]
      - Interface: GigabitEthernet0/1
      - IP: 192.168.20.254
      - Conectado √† VLAN 20 (porta Et0/2 do Switch-L2)
      - ACL aplicada: BLOCK-ATTACKER

      [Roteador]
      - Subinterface G0/1.10 ‚Üí IP: 192.168.10.1 (VLAN 10)
      - Subinterface G0/1.20 ‚Üí IP: 192.168.20.1 (VLAN 20)

      [PC2 - V√≠tima]
      - IP: 192.168.10.10
      - Gateway: 192.168.10.1

      ---

      ## Configura√ß√£o do ASAv

      interface GigabitEthernet0/1
       nameif outside
       security-level 0
       ip address 192.168.20.254 255.255.255.0
       no shutdown

      access-list BLOCK-ATTACKER extended deny ip any any
      access-list BLOCK-ATTACKER extended permit ip any 192.168.20.0 255.255.255.0
      access-group BLOCK-ATTACKER in interface outside

      route outside 0.0.0.0 0.0.0.0 192.168.20.1

      ---

      ## Testes Realizados

      | Origem ‚Üí Destino         | Ferramenta     | Comando usado                                | Resultado obtido            |
      |--------------------------|----------------|----------------------------------------------|-----------------------------|
      | PC1 ‚Üí ASAv               | Ping           | ping -c 4 192.168.20.254                      | ‚úÖ Sucesso                  |
      | PC1 ‚Üí Roteador           | Ping           | ping -c 4 192.168.20.1                        | ‚úÖ Sucesso                  |
      | PC1 ‚Üí PC2 (VLAN 10)      | Ping           | ping -c 4 192.168.10.10                       | ‚ùå 100% perda de pacotes    |
      | PC1 ‚Üí PC2 (VLAN 10)      | Nmap           | sudo nmap -sS -Pn 192.168.10.10               | ‚ùå Todas as portas filtradas|
      | PC1 ‚Üí PC2 (VLAN 10)      | Hping3         | sudo hping3 -S -p 80 --flood 192.168.10.10    | ‚ùå Sem resposta / bloqueado |
      | PC1 ‚Üí VLAN 20            | Arp-scan       | sudo arp-scan --interface=ens2 --localnet     | ‚úÖ Detectou ASAv e Roteador |

      ---

      ## Conclus√£o

      - O ASAv est√° operando corretamente como firewall de borda.
      - A ACL aplicada bloqueia todo tr√°fego IP de sa√≠da da VLAN 20 para outras redes.
      - O PC2 (v√≠tima) est√° protegido contra varreduras, ataques e acessos diretos.
      - O teste com `arp-scan` confirma que o atacante ainda pode mapear dispositivos **dentro da pr√≥pria VLAN**, mas n√£o fora dela.
      - O cen√°rio demonstra claramente a efic√°cia de pol√≠ticas de seguran√ßa bem aplicadas.

      ---

      ## Pr√≥ximos passos

      - Refinar a ACL para permitir servi√ßos espec√≠ficos (ex: DNS, HTTP) e bloquear protocolos cr√≠ticos (ex: SSH, ICMP).
      - Simular cen√°rios com regras mais granulares:
        - `access-list BLOCK-ATTACKER extended deny tcp any any eq 22`
        - `access-list BLOCK-ATTACKER extended permit udp any any eq 53`
      - Documentar impacto das mudan√ßas e validar comportamento do ASAv em tempo real.
    text_font: monospace
    text_italic: false
    text_size: 12
    text_unit: pt
    thickness: 1
    type: text
    x1: 1320.0
    y1: -240.0
    z_index: 14
  - border_color: '#00000000'
    border_style: ''
    color: '#808080FF'
    rotation: 0
    text_bold: false
    text_content: |-
      # =========================================
      # Tutorial: Como criar conex√£o externa no CML
      # =========================================

      ## Objetivo:
      Permitir que um n√≥ Linux (ex: PC1) acesse a internet para instalar pacotes como nmap, hping3, etc.

      ---

      ## Etapas:

      1. **Adicionar o n√≥ External Connector**
         - No CML, clique em "Add Node"
         - Selecione "External Connector" (√≠cone de nuvem)
         - Arraste para o seu lab

      2. **Conectar o n√≥ Linux ao External Connector**
         - Crie um link entre a interface `ens2` do PC1 e a interface `port` do External Connector
         - Confirme a conex√£o na tela de "Create Link"

      3. **Iniciar o External Connector**
         - Selecione o n√≥ `ext-conn-0`
         - Clique em "START" para ativar

      4. **Configurar o PC1 para usar DHCP**
         - Editar o arquivo Netplan:
           sudo nano /etc/netplan/01-netcfg.yaml

         - Conte√∫do sugerido:
           network:
             version: 2
             ethernets:
               ens2:
                 dhcp4: yes

         - Aplicar configura√ß√£o:
           sudo netplan apply

      5. **Testar conectividade**
         - ping 8.8.8.8           # Testa acesso IP
         - ping google.com        # Testa DNS

      6. **Instalar ferramentas**
         - sudo apt update
         - sudo apt install nmap -y
         - sudo apt install hping3 -y
         - sudo apt install arp-scan -y

      ---

      ## Observa√ß√µes:
      - O External Connector usa a rede da m√°quina host para fornecer acesso √† internet.
      - O n√≥ Linux precisa estar com DHCP ativado para receber IP, gateway e DNS automaticamente.
      - Ap√≥s instalar os pacotes, voc√™ pode desconectar o n√≥ da internet e reconect√°-lo √† topologia original.
    text_font: monospace
    text_italic: false
    text_size: 12
    text_unit: pt
    thickness: 1
    type: text
    x1: -2440.0
    y1: 1320.0
    z_index: 15
  - border_color: '#00000000'
    border_style: ''
    color: '#808080FF'
    rotation: 0
    text_bold: false
    text_content: |-
      Para acesso externo a internet
      network:
        version: 2
        ethernets:
          ens2:
            dhcp4: yes
    text_font: monospace
    text_italic: false
    text_size: 12
    text_unit: pt
    thickness: 1
    type: text
    x1: -1640.0
    y1: -600.0
    z_index: 16
smart_annotations: []
nodes:
  - boot_disk_size: null
    configuration: []
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n0
    image_definition: null
    label: ubuntu-PC1
    node_definition: ubuntu
    parameters: {}
    ram: null
    tags: []
    x: -560
    y: 400
    interfaces:
      - id: i0
        label: ens2
        mac_address: null
        type: physical
        slot: 0
  - boot_disk_size: null
    configuration: []
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n1
    image_definition: null
    label: ubuntu-PC2
    node_definition: ubuntu
    parameters: {}
    ram: null
    tags: []
    x: -520
    y: 240
    interfaces:
      - id: i0
        label: ens2
        mac_address: null
        type: physical
        slot: 0
  - boot_disk_size: null
    configuration: []
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n2
    image_definition: null
    label: asav-0
    node_definition: asav
    parameters: {}
    ram: null
    tags: []
    x: 40
    y: 320
    interfaces:
      - id: i0
        label: Management0/0
        mac_address: null
        type: physical
        slot: 0
      - id: i1
        label: GigabitEthernet0/0
        mac_address: null
        type: physical
        slot: 1
      - id: i2
        label: GigabitEthernet0/1
        mac_address: null
        type: physical
        slot: 2
      - id: i3
        label: GigabitEthernet0/2
        mac_address: null
        type: physical
        slot: 3
      - id: i4
        label: GigabitEthernet0/3
        mac_address: null
        type: physical
        slot: 4
      - id: i5
        label: GigabitEthernet0/4
        mac_address: null
        type: physical
        slot: 5
  - boot_disk_size: null
    configuration: []
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n3
    image_definition: null
    label: iol-4s-Roteador
    node_definition: iol-xe-serial-4eth
    parameters: {}
    ram: null
    tags: []
    x: 280
    y: 400
    interfaces:
      - id: i0
        label: Loopback0
        mac_address: null
        type: loopback
      - id: i1
        label: Ethernet0/0
        mac_address: null
        type: physical
        slot: 0
      - id: i2
        label: Ethernet0/1
        mac_address: null
        type: physical
        slot: 1
      - id: i3
        label: Ethernet0/2
        mac_address: null
        type: physical
        slot: 2
      - id: i4
        label: Ethernet0/3
        mac_address: null
        type: physical
        slot: 3
      - id: i5
        label: Serial1/0
        mac_address: null
        type: physical
        slot: 4
      - id: i6
        label: Serial1/1
        mac_address: null
        type: physical
        slot: 5
      - id: i7
        label: Serial1/2
        mac_address: null
        type: physical
        slot: 6
      - id: i8
        label: Serial1/3
        mac_address: null
        type: physical
        slot: 7
  - boot_disk_size: null
    configuration: []
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n4
    image_definition: null
    label: iol-l2-Switch
    node_definition: ioll2-xe
    parameters: {}
    ram: null
    tags: []
    x: -160
    y: 400
    interfaces:
      - id: i0
        label: Loopback0
        mac_address: null
        type: loopback
      - id: i1
        label: Ethernet0/0
        mac_address: null
        type: physical
        slot: 0
      - id: i2
        label: Ethernet0/1
        mac_address: null
        type: physical
        slot: 1
      - id: i3
        label: Ethernet0/2
        mac_address: null
        type: physical
        slot: 2
      - id: i4
        label: Ethernet0/3
        mac_address: null
        type: physical
        slot: 3
  - boot_disk_size: null
    configuration: []
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n5
    image_definition: null
    label: ext-conn-0
    node_definition: external_connector
    parameters: {}
    ram: null
    tags: []
    x: -560
    y: 520
    interfaces:
      - id: i0
        label: port
        mac_address: null
        type: physical
        slot: 0
links:
  - id: l0
    n1: n1
    n2: n4
    i1: i0
    i2: i1
    conditioning: {}
    label: ubuntu-PC2-ens2<->iol-l2-Switch-Ethernet0/0
  - id: l1
    n1: n4
    n2: n2
    i1: i3
    i2: i2
    conditioning: {}
    label: iol-l2-Switch-Ethernet0/2<->asav-0-GigabitEthernet0/1
  - id: l2
    n1: n4
    n2: n3
    i1: i4
    i2: i2
    conditioning: {}
    label: iol-l2-Switch-Ethernet0/3<->iol-4s-Roteador-Ethernet0/1
  - id: l3
    n1: n0
    n2: n4
    i1: i0
    i2: i2
    conditioning: {}
    label: ubuntu-PC1-ens2<->iol-l2-Switch-Ethernet0/1
lab:
  description: ''
  notes: ''
  title: Lab at Fri 07:53 AM
  version: 0.3.0
